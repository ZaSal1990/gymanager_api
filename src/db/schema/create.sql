DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS rooms CASCADE;
DROP TABLE IF EXISTS available_rooms CASCADE;
DROP TABLE IF EXISTS room_bookings CASCADE;
DROP TABLE IF EXISTS days CASCADE;
DROP TABLE IF EXISTS gym_capacity CASCADE;
DROP TABLE IF EXISTS bulletin_board CASCADE;


CREATE TABLE users (
id SERIAL PRIMARY KEY NOT NULL,
name VARCHAR(64) NOT NULL,
email VARCHAR(255) NOT NULL,
password VARCHAR(255) NOT NULL,
isAdmin BOOLEAN NOT NULL
);

CREATE TABLE rooms (
id SERIAL PRIMARY KEY NOT NULL,
name VARCHAR(64) NOT NULL,
max_capacity_level INTEGER NOT NULL
);

CREATE TABLE days (
id SERIAL PRIMARY KEY NOT NULL,
name VARCHAR(64) NOT NULL
);

CREATE TABLE available_rooms (
id SERIAL PRIMARY KEY NOT NULL,
day_id INTEGER REFERENCES days(id) ON DELETE CASCADE,
room_id INTEGER REFERENCES rooms(id) ON DELETE CASCADE
);

CREATE TABLE room_bookings (
id SERIAL PRIMARY KEY NOT NULL,
room_id INTEGER REFERENCES rooms(id) ON DELETE CASCADE,
user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
day_id INTEGER REFERENCES days(id) ON DELETE CASCADE,
time VARCHAR(255) NOT NULL,
current_capacity_level INTEGER
);

CREATE TABLE bulletin_board (
id SERIAL PRIMARY KEY NOT NULL,
title VARCHAR(64) NOT NULL,
description TEXT NOT NULL,
user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
isActive BOOLEAN NOT NULL
);

CREATE TABLE gym_capacity (
id SERIAL PRIMARY KEY NOT NULL,
day VARCHAR(64) NOT NULL,
date VARCHAR(64) NOT NULL,
time VARCHAR(64) NOT NULL,
number_of_people INTEGER
);
